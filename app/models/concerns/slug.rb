# frozen_string_literal: true

module Slug
  extend ActiveSupport::Concern

  # Slug length in bytes. The string generated by `SecureRandom.urlsafe_base64`
  # will be slighly longer.
  SHORT_SLUG_LENGTH = 3 # 16M possibilities

  included do
    after_initialize :generate_slug
    validates :slug, uniqueness: true
  end

  class_methods do
    def use_short_slug
      const_set :USES_SHORT_SLUG, true
    end
  end

  def to_param
    slug
  end

  private

  def generate_slug
    return if self[:slug].present?

    # The default length of 16 bytes of `SecureRandom.urlsafe_base64` makes
    # colisions virtually impossible but, for shorter lentghs, it's safer to
    # double check the uniqueness of the slug.
    if self.class.const_defined?(:USES_SHORT_SLUG) && self.class::USES_SHORT_SLUG
      self.slug =
        loop do
          slug = SecureRandom.urlsafe_base64 SHORT_SLUG_LENGTH
          break slug unless self.class.default_scoped.exists? slug: slug
        end
      return
    end

    self.slug = SecureRandom.urlsafe_base64
  end
end
